{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/DisplayExpenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","value","selected","onChange","event","filterOption","target","onFiltered","ExpenseDate","month","date","toLocaleDateString","day","year","getFullYear","ExpenseItem","title","amount","ExpensesList","items","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","datapoint","ExpensesChart","chartDataPoints","expenses","getMonth","DisplayExpenses","useState","setYear","filteredExpenses","filter","toString","selectedYear","ExpenseForm","enteredTitle","enteredAmount","enteredDate","userInput","setUserInput","onSubmit","e","preventDefault","expenseData","Date","onSaveExpenseData","type","prevState","min","step","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","random","floor","onAddExpense","DUMMY_EXPENSES","App","allExpenses","setExpense","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3e26e52b.chunk.js","sourcesContent":["import './Card.css'\r\n\r\nfunction Card(props) {\r\n    const classes = 'card ' + props.className;\r\n\r\n    return <div className={classes}>{props.children}</div>; //props.children allows additional html elements to be wrapped under <Card />\r\n}\r\n\r\nexport default Card;","import React from \"react\";\r\nimport \"./ExpensesFilter.css\";\r\n\r\nconst ExpensesFilter = (props) => {\r\n\r\n    const handleChange = (event) => {\r\n        let filterOption = event.target.value\r\n        props.onFiltered(filterOption)\r\n    }\r\n\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={handleChange}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import \"./ExpenseDate.css\";\r\n\r\nfunction ExpenseDate(props) {\r\n  const month = props.date.toLocaleDateString(\"en-US\", { month: \"long\" });\r\n  const day = props.date.toLocaleDateString(\"en-US\", { day: \"2-digit\" });\r\n  const year = props.date.getFullYear();\r\n\r\n  return (\r\n    <div className='expense-date'>\r\n      <div className='expense-date__month'>{month}</div>\r\n      <div className='expense-date__day'>{day}</div>\r\n      <div className='expense-date__year'>{year}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseDate;\r\n","import \"./ExpenseItem.css\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\n\r\nfunction ExpenseItem(props) {\r\n  return (\r\n    <li>\r\n      <Card className=\"expense-item\">\r\n        <ExpenseDate date={props.date} />\r\n        <div className=\"expense-item__description\">\r\n          <h2>{props.title}</h2>\r\n          <div className=\"expense-item__price\">{props.amount}</div>\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ExpenseItem;\r\n","import ExpenseItem from './ExpenseItem'\r\nimport './ExpensesList.css'\r\n\r\nconst ExpensesList = props => {\r\n  function createItem(expense) {\r\n    //the parameter, expense, originates from expenses.map(createItem)'s expenses.\r\n    return (\r\n      <ExpenseItem\r\n        key={expense.id}\r\n        title={expense.title}\r\n        amount={expense.amount}\r\n        date={expense.date}\r\n      />\r\n    );\r\n  }\r\n\r\n  if (props.items.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\">Found no expenses</h2>\r\n  }\r\n\r\n  return (\r\n      <>\r\n          <ul className=\"expenses-list\">\r\n            {props.items.map(createItem)}\r\n          </ul>\r\n      </>\r\n  )\r\n};\r\n\r\nexport default ExpensesList;\r\n","import React from \"react\";\r\nimport \"./ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = \"0%\";\r\n\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import ChartBar from \"./ChartBar\";\r\nimport \"./Chart.css\";\r\n\r\nconst Chart = (props) => {\r\n  const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\r\n  const totalMaximum = Math.max(...dataPointValues);\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((datapoint) => {\r\n        return (\r\n          <ChartBar\r\n            key={datapoint.label}\r\n            value={datapoint.value}\r\n            maxValue={totalMaximum}\r\n            label={datapoint.label}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import Chart from \"../Chart/Chart\";\r\n\r\nconst ExpensesChart = (props) => {\r\n  const chartDataPoints = [\r\n    { label: \"Jan\", value: 0 },\r\n    { label: \"Feb\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Apr\", value: 0 },\r\n    { label: \"May\", value: 0 },\r\n    { label: \"Jun\", value: 0 },\r\n    { label: \"Jul\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sept\", value: 0 },\r\n    { label: \"Oct\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Dec\", value: 0 }\r\n  ];\r\n\r\n  for (const expense of props.expenses) {\r\n      const expenseMonth = expense.date.getMonth(); //january starts at 0\r\n      chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n  \r\n  return <Chart dataPoints={chartDataPoints}/>;\r\n};\r\n\r\nexport default ExpensesChart;","import Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\nimport \"./Expenses.css\";\r\nimport { useState } from \"react\";\r\n\r\nfunction DisplayExpenses(props) {\r\n  const [year, setYear] = useState(\"2020\");\r\n\r\n  function filteredDate(selectedYear) {\r\n    setYear(selectedYear);\r\n  }\r\n\r\n  const filteredExpenses = props.expenses.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === year;\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Card className=\"expenses\">\r\n        <ExpensesFilter selected={year} onFiltered={filteredDate} />\r\n        <ExpensesChart expenses={filteredExpenses} />\r\n        <ExpensesList items={filteredExpenses} />\r\n        {\r\n          //teacher's method\r\n          /*\r\n          props.expenses.map(expense => {\r\n            <ExpenseItem\r\n              key={expense.id}\r\n              title={expense.title}\r\n              amount={expense.amount}\r\n              date={expense.date}\r\n            />\r\n          })\r\n          */\r\n        }\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DisplayExpenses;\r\n","import \"./NewExpense.css\";\r\nimport { useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = (props) => {\r\n  //less complicated way\r\n  //   const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  //   const [enteredAmount, setEnteredAmount] = useState(0); //the tutor stated that it can always be initialize with a string\r\n  //   const [enteredDate, setEnteredDate] = useState(new Date());\r\n\r\n  const [userInput, setUserInput] = useState({\r\n    enteredTitle: \"\",\r\n    enteredAmount: \"\", //initializing them all, despite being integers and date formats, in strings is actually permissible\r\n    enteredDate: \"\",\r\n  });\r\n\r\n  const titleChangeHandler = (e) => {\r\n    //one method but less reliable\r\n    // setUserInput(\r\n    //     {\r\n    //         ...userInput, //this is important so as to avoid react from deleting the existing values. also it must be the first\r\n    //         enteredTitle: e.target.value,\r\n    //     }\r\n    // );\r\n\r\n    setUserInput((prevState) => {\r\n      return { ...prevState, enteredTitle: e.target.value };\r\n    }); //this is a better approach as the latest snapshot is always guaranteed\r\n\r\n    // console.log(e.target.value);\r\n  };\r\n\r\n  const amountChangeHandler = (e) => {\r\n    setUserInput((prevState) => {\r\n      return { ...prevState, enteredAmount: e.target.value };\r\n    });\r\n    //   console.log(e.target.value);\r\n  };\r\n\r\n  const dateChangeHandler = (e) => {\r\n    setUserInput((prevState) => {\r\n      return { ...prevState, enteredDate: e.target.value };\r\n    });\r\n    //   console.log(e.target.value);\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault(); //prevents the request from being sent, hence the page won't reload\r\n    const expenseData = {\r\n      title: userInput.enteredTitle,\r\n      amount: +userInput.enteredAmount,\r\n      date: new Date(userInput.enteredDate)\r\n    };\r\n\r\n    let initialState = {\r\n      enteredTitle: \"\",\r\n      enteredAmount: \"\",\r\n      enteredDate: \"\",\r\n    };\r\n\r\n    props.onSaveExpenseData(expenseData); //shall only be executed here, hence parantheses is here. Also there's a parameter here. it is to enable the passing of expenseData\r\n    setUserInput(initialState);\r\n  };\r\n\r\n  return (\r\n    //create the submission action on the Form Element itself\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            value={userInput.enteredTitle}\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            value={userInput.enteredAmount}\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n            value={userInput.enteredDate}\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button onClick={props.onCancel}>Cancel</button>\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import './NewExpense.css';\r\nimport ExpenseForm from './ExpenseForm';\r\nimport { useState } from 'react';\r\n\r\nfunction NewExpense(props) {\r\n    const saveExpenseDataHandler = enteredExpenseData => {\r\n        let limit = 100;\r\n        let random = limit * Math.random();\r\n        const expenseData = {\r\n            ...enteredExpenseData,\r\n            id: Math.floor(random).toString()\r\n        }\r\n        props.onAddExpense(expenseData);\r\n        setIsEditing(false);\r\n    }\r\n\r\n    const [isEditing, setIsEditing] = useState(false)\r\n    const startEditingHandler = () => {\r\n      setIsEditing(true)\r\n    }\r\n\r\n    const stopEditingHandler = () => {\r\n      setIsEditing(false)\r\n    }\r\n\r\n  return (\r\n    <div className='new-expense'>\r\n        {!isEditing && <button onClick={startEditingHandler}>Add New Expense</button>} \r\n        {isEditing && <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} onCancel={stopEditingHandler}/>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewExpense;\r\n","import DisplayExpenses from \"./components/Expenses/DisplayExpenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nimport { useState } from \"react\";\n\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nfunction App() {\n  const [allExpenses, setExpense] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = expense => {\n    setExpense( prevState => {\n      return [expense, ...prevState];\n    });\n  };\n\n  return (\n    <>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <DisplayExpenses expenses={allExpenses} />\n    </>\n    //notice the expenses={expenses}. expenses is a custom prop, can be named however you want.\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}